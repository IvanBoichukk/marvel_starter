{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","fetch","res","ok","Error","status","json","getAllCharacters","a","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","this","clearInterval","timerId","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","itemRefs","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","arr","i","tabIndex","props","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4c21fdf.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ margin: '0 auto', background: 'none', display: 'block' }} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"> </animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"> </animate>\n            </circle>\n            </g>\n            </g>\n            <g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\" >\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"> </animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\" > </animate>\n            </circle>\n            </g>\n            </g>\n            <g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"> </animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"> </animate>\n            </circle>\n            </g>\n            </g>\n            <g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"> </animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\" > </animate>\n            </circle>\n            </g>\n            </g>\n            <g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" > </animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\">\n            </animate>\n            </circle>\n            </g>\n            </g>\n            <g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"> </animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"> </animate>\n            </circle>\n            </g>\n            </g>\n            <g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"> </animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\" > </animate>\n            </circle>\n            </g>\n            </g>\n            <g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\" > </animate> </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return(\n        <img style={{display: 'block', width: \"250px\", height: \"250px\", objectFit: 'contain', margin: \"0 auto\"}} src={img} alt=\"Error\"/>\n    )\n}\n\nexport default ErrorMessage;","class MarvelService {\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    _apiKey = 'apikey=b2204685dcf905f5bf3dcc8097ad1f21';\n    _baseOffset = 210;\n\n    getResource = async (url) => {\n        let res = await fetch(url);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n        }\n\n        return await res.json();\n    }\n\n    getAllCharacters = async (offset = this._baseOffset) => {\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\n        return res.data.results.map(this._transformCharacter);\n    }\n\n    getCharacter = async (id) => {\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n        return this._transformCharacter(res.data.results[0]);\n    }\n\n    _transformCharacter = (char) => {\n        return {\n            id:char.id, \n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items \n        }\n    }\n}\n\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react/cjs/react.production.min';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n        // this.timerId = setInterval(this.updateChar, 3000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerId);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n  \n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011100) + 1011100);\n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage} \n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today! <br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.updateChar} className = \"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\"\n                        className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, thumbnail, description, homepage, wiki} = char;\n    let imgStyle = {'objectFit': 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit': 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">{description}</p> \n                <div className=\"randomchar__btns\">\n                    <a href={homepage}  className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { Component } from 'react/cjs/react.production.min';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService'\nimport './charList.scss';\n\nclass CharList extends Component {\n    \n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n             newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n\n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    itemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref);\n    }\n\n    focusOnItem = (id) => {\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n    }\n    renderItems(arr) {\n        const items=arr.map((item, i) => {\n            let imgStyle={'objectFit': 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle={'objectFit': 'unset'};\n            }\n\n            return (\n                <li\n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={this.setRef}\n                    key={item.id}\n                    onClick={() => {\n                        this.props.onCharSelected(item.id);\n                        this.focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                            if (e.key === ' ' || e.key === \"Enter\") {\n                                this.props.onCharSelected(item.id);\n                                this.focusOnItem(i);\n                            }\n                        }}>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n\n        const { charList, error, loading, offset, newItemLoading, charEnded } = this.state;\n\n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? items : null;\n        \n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button\n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    onClick={() => this.onRequest(offset)}\n                    style={{ 'display': charEnded ? 'none' : 'block'}}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react/cjs/react.production.min';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport MarvelService from '../../services/MarvelService';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar()\n        }\n    }\n\n    updateChar = () => {\n        const {charId} = this.props;\n        if (!charId) {\n            return; \n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    render() {\n        const { char, loading, error } = this.state;\n\n        const skeleton = loading || error || char ? null : <Skeleton/>;\n        const errorMessage = error ? < ErrorMessage/> : null;\n        const spinner = loading ? < Spinner/> : null;\n        const content = !(loading || error || !char) ? < View char={char}/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n    )\n    }   \n}\n\nconst View = ({char}) => {\n    \n    const { name, description, thumbnail, homepage, wiki, comics } = char;\n    \n    let imgStyle = {'objectFit': 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit': 'contain'};\n    }\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div> \n                    <div className=\"char__info-name\">{name}</div> \n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\"> homepage </div> \n                        </a> \n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\"> Wiki </div>\n                        </a> \n                    </div>\n                </div> \n            </div>\n            <div className=\"char__descr\">\n                {description} \n            </div>\n            <div className=\"char__comics\"> Comics: </div> \n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : \"There is no comics with this character\"}\n                {\n                    comics.map((item, i) => {\n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    }) \n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react/cjs/react.production.min\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log(error, errorInfo);\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react/cjs/react.production.min\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\"\n                        src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}